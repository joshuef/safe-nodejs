env:
  global:
    - RUST_BACKTRACE=1
    - PATH=$PATH:$HOME/.cargo/bin
    - USE_TRAVIS_WAIT_ENHANCED=true
    - YARN_GPG=no # otherwise this starts gpg-agent that never exits

os:
  - osx
  - linux
  - windows

language: node_js

node_js:
  - 12
  - 10

cache: cargo

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -qO- "https://github.com/crazy-max/travis-wait-enhanced/releases/download/v0.2.0/travis-wait-enhanced_0.2.0_linux_x86_64.tar.gz" | tar -zxvf - travis-wait-enhanced
    mv travis-wait-enhanced /home/travis/bin/
    travis-wait-enhanced --version; fi;
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -qO- "https://github.com/crazy-max/travis-wait-enhanced/releases/download/v0.2.0/travis-wait-enhanced_0.2.0_darwin_x86_64.tar.gz" | tar -zxvf - travis-wait-enhanced
    ls -l /Users/travis
    mkdir -p /Users/travis/bin
    mv travis-wait-enhanced /Users/travis/bin/
    export PATH="/Users/travis/bin:${PATH}"
    travis-wait-enhanced --version; fi;
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then curl -LfsS -o /tmp/travis-wait-enhanced.zip "https://github.com/crazy-max/travis-wait-enhanced/releases/download/v0.2.0/travis-wait-enhanced_0.2.0_windows_x86_64.zip"
    7z x /tmp/travis-wait-enhanced.zip -y -o/usr/bin/ travis-wait-enhanced.exe -r
    travis-wait-enhanced --version; fi;
  - |
    if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.rs
    chmod +x ./rustup.rs
    ./rustup.rs -y
    yarn global add neon-cli
    fi;
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then PowerShell -Command 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned'; fi;
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then PowerShell -File scripts\\install_rustup.ps1; fi;
  - rustup -V
  - rustc -V
  - node -v
  - npm -v
  - echo $TRAVIS_NODE_VERSION

install:
  # Install only npm deps to be able to run tests
  - SAFE_NODEJS_DEV=true travis-wait-enhanced --timeout 120m yarn

script:
  # Run automated NodeJs tests
  - yarn test-with-mock

after_success:
  # remove native folder to prevent packaging EVERYTHING
  - rm -rf native/target
  # First build for node.
  - if [[ ${TRAVIS_TAG} != "" ]]; then yarn package; fi;
  - if [[ ${TRAVIS_TAG} != "" ]]; then NODE_PRE_GYP_GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN yarn publish-gh-draft || exit 0; fi;
  # clean for next one
  - rm -rf build
  # build and publish electron
  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then yarn neon-build-electron; fi;
  # remove native folder again to prevent packaging EVERYTHING
  - rm -rf native/target
  # Publish when built on a tag
  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then yarn package-electron; fi;
  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then NODE_PRE_GYP_GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN yarn publish-gh-draft || exit 0; fi;
  # clean for next one
  - rm -rf build
  # electron 6
  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then yarn neon-build-electron6; fi;
  # remove native folder again to prevent packaging EVERYTHING
  - rm -rf native/target
  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then yarn package-electron6; fi;

  - if [[ ${TRAVIS_TAG} != "" && ${TRAVIS_NODE_VERSION} == "12"  ]]; then NODE_PRE_GYP_GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN yarn publish-gh-draft || exit 0; fi;
